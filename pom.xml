<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.durcframework</groupId>
	<artifactId>RMS</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>org.durcframework</groupId>
			<artifactId>durcframework</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.4</version>
		</dependency>	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<version>6.0.29</version>
			<scope>provided</scope>
		</dependency>
		<!-- 
		<dependency>
		 	<groupId>net.sourceforge.jtds</groupId>
		 	<artifactId>jtds</artifactId>
		 	<version>1.2.2</version>
		 </dependency>
		 	<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7<
		 -->
	</dependencies>

	<build>
		<finalName>RMS</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<!-- 打包时跳过测试 -->
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <version>2.18.1</version>
		        <configuration>
		        	<skipTests>true</skipTests>
		        </configuration>
		    </plugin>
			
			<plugin>
				<!-- YUI Compressor Maven压缩插件 -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<version>1.3.0</version>
				<configuration>
					<!-- 读取js,css文件采用UTF-8编码 -->
					<encoding>UTF-8</encoding>
					<!-- 不显示js可能的错误 -->
					<jswarn>false</jswarn>
					<!-- 若存在已压缩的文件，会先对比源文件是否有改动。有改动便压缩，无改动就不压缩 -->
					<force>false</force>
					<!-- 在指定的列号后插入新行 -->
					<linebreakpos>-1</linebreakpos>
					<!-- 压缩之前先执行聚合文件操作 -->
					<preProcessAggregates>true</preProcessAggregates>
					<!-- 压缩后保存文件后缀 -->
					<suffix>.min</suffix>
					<!-- 源目录，即需压缩的根目录 -->
					<sourceDirectory>src/main/webapp/js</sourceDirectory>
					<!-- 压缩js和css文件 -->
					<includes>
						<!-- 只压缩src/main/webapp/js/common.js -->
						<include>common.js</include>
					</includes>
					<!-- 以下目录和文件不会被压缩
					<excludes>
						<exclude>easyui/locale/*.js</exclude>
						<exclude>easyui/themes/*.css</exclude>
					</excludes>
					 -->
					<!-- 压缩后输出文件目录 -->
					<outputDirectory>src/main/webapp/js</outputDirectory>
					<!-- 聚合文件 -->
					<aggregations>
						<aggregation>
							<!-- 合并每一个文件后插入一新行 -->
							<insertNewLine>true</insertNewLine>
							<!-- 需合并文件的根文件夹 -->
							<inputDir>src/main/webapp/js/need_compress</inputDir>
							<!-- 最终合并的输出文件 -->
							<output>src/main/webapp/js/common.js</output>
							<!-- 
							运行命令mvn yuicompressor:compress
							会把src/main/webapp/js/need_compress下所有JS文件合并到
							src/main/webapp/js/common.js中
							并生成一个common.min.js
							不会影响到其它js,css
							 -->
							<includes>
								<include>*.js</include>
							</includes>
						</aggregation>
					</aggregations>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>